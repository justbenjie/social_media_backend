name: Build and Deploy

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest

    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: set up python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/social_media_backend:latest
      #     cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social_media_backend:buildcache
      #     cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social_media_backend:buildcache,mode=max

  deploy:
    environment:
      name: production
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: deploying to Heruko
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "social-media-philipp"
          heroku_email: ${{secrets.HEROKU_EMAIL}}

      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.UBUNTU_HOST}}
          username: ${{secrets.UBUNTU_USERNAME}}
          password: admin
          script: |
            cd app/src
            git pull 
            echo admin | sudo -S systemctl restart social_media_api
